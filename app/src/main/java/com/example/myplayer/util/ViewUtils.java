package com.example.myplayer.util;

import android.content.Context;
import android.content.res.Resources;
import android.os.Build;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.view.View;
import android.view.ViewGroup;

import com.example.myplayer.MyApplication;
import com.example.myplayer.R;

import java.lang.reflect.Field;

/*
           6666
           @author ZDS
           create on 2016/4/6 20:37 */
public class ViewUtils {
    /**
     * 获状态栏高度
     *
     * @param context 上下文
     * @return 通知栏高度
     */
    public static int getStatusBarHeight(Context context) {
        int statusBarHeight = 0;
        try {
            Class<?> clazz = Class.forName("com.android.internal.R$dimen");
            Object obj = clazz.newInstance();
            Field field = clazz.getField("status_bar_height");
            int temp = Integer.parseInt(field.get(obj).toString());
            statusBarHeight = context.getResources().getDimensionPixelSize(temp);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return statusBarHeight;
    }

    /**
     * 用id加载一个布局
     *
     * @param id
     * @return
     */

    public static View inflateView(int id) {
        return View.inflate(MyApplication.getInstance(), id, null);
    }

    public static View inflateView(int id, ViewGroup viewGroup) {
        return View.inflate(MyApplication.getInstance(), id, viewGroup);
    }

    public static View inflateView(Context context, int id) {
        return View.inflate(context, id, null);
    }


    /**
     * Returns a themed color integer associated with a particular resource ID.
     * If the resource holds a complex {@link ColorStateList}, then the default
     * color from the set is returned.
     *
     * @param resources Resources
     * @param id        The desired resource identifier, as generated by the aapt
     *                  tool. This integer encodes the package, type, and resource
     *                  entry. The value 0 is an invalid identifier.
     * @return A single color value in the form 0xAARRGGBB.
     */
    public static int getColor(Resources resources, int id) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            return resources.getColor(id, null);
        } else {
            return resources.getColor(id);
        }
    }








    /**
     * fragment跳转
     *
     * @param
     * @param clazz 要跳转到的fragment
     * @param stack 是否要加入到回退栈
     * @param save  是否要保存自己
     */
    public static void launch(FragmentActivity activity, boolean save, int id, Class clazz, boolean stack, Fragment thisFragment, Bundle bundle) {
        try {
            FragmentManager manager = activity.getSupportFragmentManager();
            FragmentTransaction beginTransaction = manager.beginTransaction();
            beginTransaction.setCustomAnimations(R.anim.my_scale_action,
                    R.anim.my_alpha_action, R.anim.my_scale_action,
                    R.anim.my_translation_out);

            Fragment fragment = null;
            fragment = (Fragment) clazz.newInstance();
            fragment.setArguments(bundle);
            beginTransaction.add(id, fragment);
            if (null != thisFragment) {
                String tag = thisFragment.getClass().getName();
                if (save) {
                    beginTransaction.hide(thisFragment);
                } else {
                    beginTransaction.remove(thisFragment);
                }
                if (stack) {
                    beginTransaction.addToBackStack(tag);
                }
            }
            beginTransaction.commitAllowingStateLoss();

        } catch (Throwable e) {
            e.printStackTrace();
            ExceptionUtil.printThrowable(e);
        }
    }
}
