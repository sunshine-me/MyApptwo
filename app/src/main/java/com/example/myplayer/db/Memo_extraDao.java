package com.example.myplayer.db;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;
import org.greenrobot.greendao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table "MEMO_EXTRA".
 */
public class Memo_extraDao extends AbstractDao<Memo_extra, Long> {

    public static final String TABLENAME = "MEMO_EXTRA";

    public Memo_extraDao(DaoConfig config) {
        super(config);
    }


    public Memo_extraDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /**
     * Creates the underlying database table.
     */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists ? "IF NOT EXISTS " : "";
        db.execSQL("CREATE TABLE " + constraint + "\"MEMO_EXTRA\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"MEMOID\" INTEGER NOT NULL UNIQUE ," + // 1: memoid
                "\"TEMPERID\" INTEGER," + // 2: temperid
                "\"WEATHERID\" INTEGER," + // 3: weatherid
                "\"WEXTRATITLE\" TEXT);"); // 4: wextratitle
    }

    /**
     * Drops the underlying database table.
     */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"MEMO_EXTRA\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Memo_extra entity) {
        stmt.clearBindings();

        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getMemoid());

        Integer temperid = entity.getTemperid();
        if (temperid != null) {
            stmt.bindLong(3, temperid);
        }

        Integer weatherid = entity.getWeatherid();
        if (weatherid != null) {
            stmt.bindLong(4, weatherid);
        }

        String wextratitle = entity.getWextratitle();
        if (wextratitle != null) {
            stmt.bindString(5, wextratitle);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Memo_extra entity) {
        stmt.clearBindings();

        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getMemoid());

        Integer temperid = entity.getTemperid();
        if (temperid != null) {
            stmt.bindLong(3, temperid);
        }

        Integer weatherid = entity.getWeatherid();
        if (weatherid != null) {
            stmt.bindLong(4, weatherid);
        }

        String wextratitle = entity.getWextratitle();
        if (wextratitle != null) {
            stmt.bindString(5, wextratitle);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }

    @Override
    public Memo_extra readEntity(Cursor cursor, int offset) {
        Memo_extra entity = new Memo_extra( //
                cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
                cursor.getInt(offset + 1), // memoid
                cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // temperid
                cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // weatherid
                cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4) // wextratitle
        );
        return entity;
    }

    @Override
    public void readEntity(Cursor cursor, Memo_extra entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setMemoid(cursor.getInt(offset + 1));
        entity.setTemperid(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setWeatherid(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setWextratitle(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
    }

    @Override
    protected final Long updateKeyAfterInsert(Memo_extra entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }

    @Override
    public Long getKey(Memo_extra entity) {
        if (entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Memo_extra entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }

    /**
     * Properties of entity Memo_extra.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Memoid = new Property(1, Integer.class, "memoid", false, "MEMOID");
        public final static Property Temperid = new Property(2, Integer.class, "temperid", false, "TEMPERID");
        public final static Property Weatherid = new Property(3, Integer.class, "weatherid", false, "WEATHERID");
        public final static Property Wextratitle = new Property(4, String.class, "wextratitle", false, "WEXTRATITLE");
    }

}
